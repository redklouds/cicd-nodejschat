version: "3"
services:
  web:
    # replace username/repo:tag with your name and image details
    #image: redklouds/getstarted:part5
    image: redklouds/cicd-flaskapp:latest
    deploy:
      #replicas: 12
      mode: global
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
    environment:
      - "VIRTUAL_HOST=sexon.lydanny.com"
    ports:
      - "6969:5000"
    networks:
      - webnet
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
  redis:
    image: redis
    #replicas: 4
    ports:
      - "6379:6379"
    volumes:
    #will have problems in the below lines depending on host system if windows
    #then make sure you have a REAl directroy ON THE SYSTEM
    # the first half :(before colon) is persistence means taht data WILL BE
    # STORED HERE ON THE HOST SYSTEM, (even if redis is a inmemeory db it backs
    # up data by writing it to disk everynow and then, for the sencario that we
    # restart this container if we store our data inside the container then the
    # data is wiped and removed, that why we have persistent data that STAYS ON
    # the host machine so when our new container connects we connect bnack to
    # the old persistent data file
    #the :(after colon) specfiies IN THE CONTAINER where do we link OUTSIDE(HOST
    #MACHINE) to the INSIDE (container machine)
      - /home/redklouds/data:/data
      #- /home/data:/data
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
    command: redis-server --appendonly yes
    networks:
      - webnet
#  stockminer:
#    container_name: stock_miner
#    image: redklouds/stock_miner:latest
#    deploy:
#      #replicas: 4
#      restart_policy:
#        condition: on-failure
#    environment:
#      - PYTHONBUFFERED=0
    #volumes:
    #  - /home/redklouds/data:/data
#    command: -u stock_miner.py
  portainer:
    image: portainer/portainer
    container_name: portainer
    ports:
      - "9000:9000"
    #  - 443:9000
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    volumes:
    #many times you need to make the volume folder if its on a permission
    #denied location such as /var/ this will throw a config file error
    #and the container will not run if you do not have the folder/volume
    #created on the host machine
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/portainer-data:/data
    command: -H unix:///var/run/docker.sock

  sheperd:
    image: mazzolino/shepherd
    container_name: shep
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    environment:
      - SLEEP_TIME=1m
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  chatapp:
    image: redklouds/cicd-nodejschat
    ports:
      - "5757:5000"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
    volumes:
      - /home/redklouds/nodeJSdata:/var/nodeJSData
networks:
  webnet:
